version: '3.8'

services:
  postgres-beers:
    image: postgres:12
    container_name: postgres-beers
    env_file:
      - .env
    environment:
      - PGHOST=/var/run/postgresql
      - PGDATABASE=$PGDATABASE_BEERS
      - PGUSER=$PGUSER_BEERS
      - PGPASSWORD=$PGPASSWORD_BEERS
    volumes:
      - "./postgresql/create_beers_db.sh:/docker-entrypoint-initdb.d/create_beers_db.sh"
      - pg_beers_data:/var/lib/postgresql/data

    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $POSTGRES_USER" ]
      interval: 5s
      timeout: 5s
      retries: 5

  postgres-users:
    image: postgres:12
    container_name: postgres-users
    env_file:
      - .env
    environment:
      - PGHOST=/var/run/postgresql
      - PGDATABASE=$PGDATABASE_USERS
      - PGUSER=$PGUSER_USERS
      - PGPASSWORD=$PGPASSWORD_USERS
    volumes:
      - "./postgresql/create_users_db.sh:/docker-entrypoint-initdb.d/create_users_db.sh"
      - pg_users_data:/var/lib/postgresql/data

    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $POSTGRES_USER" ]
      interval: 5s
      timeout: 5s
      retries: 5

  populate-beers-db:
    image: alpine:latest
    env_file:
      - .env
    environment:
      - PGUSER=$PGUSER_BEERS
      - PGPASSWORD=$PGPASSWORD_BEERS
      - PGDATABASE=$PGDATABASE_BEERS
    depends_on:
      postgres-beers:
        condition: service_healthy
    volumes:
      - "./postgresql/populate_beers_db.sh:/populate_beers_db.sh"
      - "./postgresql/sql_scripts:/postgres_init/sql_scripts"
    command: /bin/sh -c '
      apk update &&
      apk add postgresql postgresql-client &&
      cd /postgres_init/sql_scripts &&
      /bin/sh /populate_beers_db.sh'

  fast-api-app:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      populate-beers-db:
        condition: service_completed_successfully
      postgres-users:
        condition: service_healthy
    env_file:
      - .env
    ports:
      - "8000:8000"

volumes:
  pg_beers_data:
  pg_users_data: